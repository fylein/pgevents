version: '3.8'
services:
  rabbitmq:
    image: rabbitmq:3.8.9-management-alpine
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=password
    ports:
      - '5672:5672'
      - '15672:15672'
    volumes:
      - rabbitmq-data:/data/
  database:
    build: dev/postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: dummy
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./dev/:/pgevents
      - ./dev/postgres/init-pgconf.sh:/docker-entrypoint-initdb.d/init-pgconf.sh
      - ./dev/postgres/fixtures:/docker-entrypoint-initdb.d/
      - database-data:/var/lib/postgresql/data/
  producer:
    build: .
    restart: unless-stopped
    environment:
      PGHOST: database
      PGPORT: 5432
      PGDATABASE: dummy
      PGUSER: postgres
      PGPASSWORD: postgres
      PGREPLICATIONSLOT: pgevents
      PGTABLES: public.users
      RABBITMQ_URL: amqp://admin:password@rabbitmq:5672/?heartbeat=0
      RABBITMQ_EXCHANGE: pgevents_exchange
      LOG_LEVEL: DEBUG
    command: ["bash", "-c", "producer"]
    depends_on:
      - database
      - rabbitmq
  event_logger:
    build: .
    restart: unless-stopped
    environment:
      RABBITMQ_URL: amqp://admin:password@rabbitmq:5672/?heartbeat=0
      RABBITMQ_EXCHANGE: pgevents_exchange
      LOG_LEVEL: DEBUG
      RABBITMQ_BINDING_KEYS: #
      RABBITMQ_QUEUE_NAME: all_events_queue
    command: ["bash", "-c", "event_logger"]
    depends_on:
      - database
      - rabbitmq
volumes:
  database-data:
  rabbitmq-data:
